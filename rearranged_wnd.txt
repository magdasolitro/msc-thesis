push %rdi
mov %rax , %rdi
callq <label> <imm>, %rsp           # call to function
nop                                 # no-operation
leaveq                              # high-level procedure exit
retq <UNK>
push %rbp
mov %rsp, %rbp
mov %rdi, <imm> (%rbp)
mov %esi, <imm> (%rbp)
mov %rdx, <imm> (%rbp)
movl <imm>, <imm> (%rbp)
cmpq <imm>, <imm> (%rbp)
je cmpq <imm>


mov <imm> (%rbp), %edx
mov %dl, (%rax)
nop
pop %rbp
retq <UNK>
push %rbp
mov %rsp, %rbp
mov %rdi, <imm> (%rbp)
mov %rsi, <imm> (%rbp)
mov %rdx , <imm> (%rbp)
mov <imm> (%rbp), %rax


mov <imm> (%rbp), %edx
mov %dl, (%rax)
nop
pop %rbp
retq <UNK>
push %rbp
mov %rsp, %rbp
sub <imm>, %rsp
mov %rdi, <imm> (%rbp)
mov %rsi, <imm> (%rbp)
mov %rdx, <imm> (%rbp)
mov %rcx, <imm> (%rbp)


mov <imm> (%rbp), %esi
mov <imm> (%rbp), %rax
add %rsi, %rax
xor %rcx, %rdx
mov %rdx, (%rax)
addl <imm>, <imm> (%rbp)
cmpl <imm>, <imm> (%rbp)
jbe subq <imm>, <imm> (%rbp)
addq <imm>, <imm> (%rbp)
addq <imm>, <imm> (%rbp)
cmpq <imm>, <imm> (%rbp)
ja movl <imm>, <imm> (%rbp)
cmpq <imm>, <imm> (%rbp )
je mov <imm>, (%rbp)


mov <imm> (%rbp), %rax
mov %edx, (%rax)
nop
leaveq
retq <UNK>
push %rbp
mov %rsp, %rbp
sub <imm>, %rsp
mov %fs: <imm> , %rax
mov %rax, <imm> (%rbp)
xor %eax, %eax
movabs <imm>, %rax
movabs <imm>, %rdx


mov %r12d, %edi
callq <label> <imm>, %rbx
cmp %rbx, %rbp
jne add <imm>, %rsp
pop %rbx
pop %rbp
pop %r12
pop %r13
pop %r14
pop %r15
retq <UNK>
nopw <UNK>
retq <UNK>
sub <imm>, %rsp
add <imm>, %rsp
